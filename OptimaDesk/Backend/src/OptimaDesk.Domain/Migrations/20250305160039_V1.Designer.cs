// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OptimaDesk.Domain.Context;

#nullable disable

namespace OptimaDesk.Domain.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250305160039_V1")]
    partial class V1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoleId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.AGOToTruck", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DAFSerialNo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LitreIssued")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Transporter")
                        .HasColumnType("int");

                    b.Property<string>("TransporterName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TruckNo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RetailStationId");

                    b.ToTable("AGOToTrucks");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.Banking", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("BankingReconciliationId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("TotalDeposits")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPOS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankingReconciliationId");

                    b.HasIndex("RetailStationId");

                    b.ToTable("Bankings");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.BulkSale", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CustomerLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LitreDispensed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("StockAfterDispensed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("StockBeforeDispensed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TankNo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RetailStationId");

                    b.ToTable("BulkSales");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.Deposit", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("BankingId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceNo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankingId");

                    b.HasIndex("RetailStationId");

                    b.ToTable("Deposits");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.Expense", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AttachmentUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ExpenseCategory")
                        .HasColumnType("int");

                    b.Property<string>("ExpenseControlId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseControlId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.ExpenseControl", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("ActualClosingPettyCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CashDifference")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("OpeningPettyCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PettyCashId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Reimbursement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("TheoreticalClosingPettyCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCashAtHand")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalDisbursed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PettyCashId");

                    b.HasIndex("RetailStationId");

                    b.ToTable("ExpenseControls");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.FinancialAsset", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("AssetType")
                        .HasColumnType("int");

                    b.Property<string>("BankingReconciliationId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("LitreDispensed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("SalesDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankingReconciliationId");

                    b.HasIndex("RetailStationId");

                    b.ToTable("FinancialAssets");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.FinancialReconciliation", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("AGOSold")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AGOToThirdPartyTruck")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AGOToTruck")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BulkSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashAtHand")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashBF")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CashDifference")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ClosingCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GeneratorUsage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("LubricantSold")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PMSSold")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("POS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("TotalSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Transfer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RetailStationId");

                    b.ToTable("FinancialReconciliations");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.GeneratorUsage", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LitreDispensed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MeterAfterDispensed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MeterBeforeDispensed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<string>("PumpNo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RetailStationId");

                    b.ToTable("GeneratorUsages");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.POS", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("BankingId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("EODAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TerminalId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TerminalSerialNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankingId");

                    b.HasIndex("RetailStationId");

                    b.ToTable("PointOfSales");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.ProductReceived", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("LitreIssued")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LoadingTicket")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ProductMovementType")
                        .HasColumnType("int");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StationName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("StockBeforeIssued")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TankIssued")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransporterName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TruckNo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.Property<string>("WaybillNo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RetailStationId");

                    b.ToTable("ProductsReceived");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.Transfer", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankingReconciliationId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ConfirmedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CustomerBank")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("LitreDispensed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RecepientBank")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankingReconciliationId");

                    b.HasIndex("RetailStationId");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Reports.BankingReconciliation", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RetailStationId");

                    b.ToTable("BankingReconciliations");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Reports.InventorySummary", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("AGOClosingStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AGOGenUsage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AGOPriceChange")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AGOPumpSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AGOToTruck")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("LUBClosingStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LUBPriceChange")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LUBSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PMSClosingStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PMSGenUsage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PMSPriceChange")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PMSPumpSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PrepaidSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("TotalAGOSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalPMSSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RetailStationId");

                    b.ToTable("InventorySummaries");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Reports.LUBReport", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Comments")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RetailStationId");

                    b.ToTable("LUBReports");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Reports.PettyCash", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("TotalCashCr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalCashDr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RetailStationId");

                    b.ToTable("PettyCashes");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Reports.ProductTracker", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateReceived")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LoadingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoadingTicketNo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Product")
                        .HasColumnType("int");

                    b.Property<decimal>("QuantityReceived")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuantityTransferred")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Shortage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StationLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Transporter")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TruckNo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.Property<string>("WaybillNo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RetailStationId");

                    b.ToTable("ProductTrackers");
                });

            modelBuilder.Entity("OptimaDesk.Domain.RetailStations.LUBTank", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("ClosingDip")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ClosingVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LUBReportId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("OpeningDip")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpeningVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuantityReceived")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuantityTransferred")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StockPositionId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("TankCapacity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LUBReportId");

                    b.HasIndex("RetailStationId");

                    b.HasIndex("StockPositionId");

                    b.ToTable("LUBTanks");
                });

            modelBuilder.Entity("OptimaDesk.Domain.RetailStations.Pump", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("ClosingMeter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("OpeningMeter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PumpSalesId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PumpSalesId1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("RTT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("TotalSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Totalizer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PumpSalesId");

                    b.HasIndex("PumpSalesId1");

                    b.HasIndex("RetailStationId");

                    b.ToTable("Pumps");
                });

            modelBuilder.Entity("OptimaDesk.Domain.RetailStations.RetailStation", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("CurrentAGO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentLUB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentPMS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LUBCapacity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("NoOfAGO")
                        .HasColumnType("int");

                    b.Property<int>("NoOfPMS")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("TankCapacity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalNoOfTanks")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RetailStations");
                });

            modelBuilder.Entity("OptimaDesk.Domain.RetailStations.UGTank", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Capacity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ClosingStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("OpeningStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ProductReceived")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StockPositionId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StockPositionId1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RetailStationId");

                    b.HasIndex("StockPositionId");

                    b.HasIndex("StockPositionId1");

                    b.ToTable("UGTanks");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Sales.LUBSales", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("ClosingStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LUBReportId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("OpeningStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ProductReceived")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("SalesAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LUBReportId");

                    b.HasIndex("RetailStationId");

                    b.ToTable("LUBSales");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Sales.PumpSales", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("AGOPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AGOSalesAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AGOTotalActualSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AGOTotalRTT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AGOTotalSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("PMSPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PMSSalesAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PMSTotalActualSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PMSTotalRTT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PMSTotalSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RetailStationId");

                    b.ToTable("PumpSales");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Stock.StockPosition", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("AGOTotalClosingVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AGOTotalOpeningVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AGOTotalProductReceived")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AGOTotalTankSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("LUBTotalClosingVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LUBTotalOpeningVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LUBTotalProductReceived")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LUBTotalTankSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PMSTotalClosingVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PMSTotalOpeningVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PMSTotalProductReceived")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PMSTotalTankSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RetailStationId");

                    b.ToTable("StockPositions");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Stock.StockReconciliation", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("AGOPumpSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AGOUGTankSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("LUBPACKSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LUBSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PMSPumpSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PMSUGTankSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RetailStationId");

                    b.ToTable("StockReconciliations");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Users.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("LoginCount")
                        .HasColumnType("int");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Otp")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("OtpExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("PhoneNumber")
                        .IsUnique()
                        .HasFilter("[PhoneNumber] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("OptimaDesk.Domain.Users.StationManager", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AppUserId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CompanyEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RetailStationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("RetailStationId");

                    b.ToTable("StationManagers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("OptimaDesk.Domain.Users.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("OptimaDesk.Domain.Users.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimaDesk.Domain.Users.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("OptimaDesk.Domain.Users.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.AGOToTruck", b =>
                {
                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany()
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.Banking", b =>
                {
                    b.HasOne("OptimaDesk.Domain.Reports.BankingReconciliation", null)
                        .WithMany("Banks")
                        .HasForeignKey("BankingReconciliationId");

                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany()
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.BulkSale", b =>
                {
                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany()
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.Deposit", b =>
                {
                    b.HasOne("OptimaDesk.Domain.Finance.Banking", null)
                        .WithMany("Deposits")
                        .HasForeignKey("BankingId");

                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany()
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.Expense", b =>
                {
                    b.HasOne("OptimaDesk.Domain.Finance.ExpenseControl", null)
                        .WithMany("Expense")
                        .HasForeignKey("ExpenseControlId");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.ExpenseControl", b =>
                {
                    b.HasOne("OptimaDesk.Domain.Reports.PettyCash", null)
                        .WithMany("Expenses")
                        .HasForeignKey("PettyCashId");

                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany()
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.FinancialAsset", b =>
                {
                    b.HasOne("OptimaDesk.Domain.Reports.BankingReconciliation", null)
                        .WithMany("FinancialAssets")
                        .HasForeignKey("BankingReconciliationId");

                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany()
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.FinancialReconciliation", b =>
                {
                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany()
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.GeneratorUsage", b =>
                {
                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany()
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.POS", b =>
                {
                    b.HasOne("OptimaDesk.Domain.Finance.Banking", null)
                        .WithMany("POS")
                        .HasForeignKey("BankingId");

                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany()
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.ProductReceived", b =>
                {
                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany()
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.Transfer", b =>
                {
                    b.HasOne("OptimaDesk.Domain.Reports.BankingReconciliation", null)
                        .WithMany("Transfers")
                        .HasForeignKey("BankingReconciliationId");

                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany()
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Reports.BankingReconciliation", b =>
                {
                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany()
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Reports.InventorySummary", b =>
                {
                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany()
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Reports.LUBReport", b =>
                {
                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany()
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Reports.PettyCash", b =>
                {
                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany()
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Reports.ProductTracker", b =>
                {
                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany()
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.RetailStations.LUBTank", b =>
                {
                    b.HasOne("OptimaDesk.Domain.Reports.LUBReport", null)
                        .WithMany("Tanks")
                        .HasForeignKey("LUBReportId");

                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany("Lubricants")
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimaDesk.Domain.Stock.StockPosition", null)
                        .WithMany("LUBTanks")
                        .HasForeignKey("StockPositionId");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.RetailStations.Pump", b =>
                {
                    b.HasOne("OptimaDesk.Domain.Sales.PumpSales", null)
                        .WithMany("AGOPumps")
                        .HasForeignKey("PumpSalesId");

                    b.HasOne("OptimaDesk.Domain.Sales.PumpSales", null)
                        .WithMany("PMSPumps")
                        .HasForeignKey("PumpSalesId1");

                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany("Pumps")
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.RetailStations.UGTank", b =>
                {
                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany("Tanks")
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimaDesk.Domain.Stock.StockPosition", null)
                        .WithMany("AGOTanks")
                        .HasForeignKey("StockPositionId");

                    b.HasOne("OptimaDesk.Domain.Stock.StockPosition", null)
                        .WithMany("PMSTanks")
                        .HasForeignKey("StockPositionId1");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Sales.LUBSales", b =>
                {
                    b.HasOne("OptimaDesk.Domain.Reports.LUBReport", null)
                        .WithMany("Sales")
                        .HasForeignKey("LUBReportId");

                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany()
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Sales.PumpSales", b =>
                {
                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany()
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Stock.StockPosition", b =>
                {
                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany()
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Stock.StockReconciliation", b =>
                {
                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany()
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Users.StationManager", b =>
                {
                    b.HasOne("OptimaDesk.Domain.Users.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimaDesk.Domain.RetailStations.RetailStation", "Station")
                        .WithMany()
                        .HasForeignKey("RetailStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.Banking", b =>
                {
                    b.Navigation("Deposits");

                    b.Navigation("POS");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Finance.ExpenseControl", b =>
                {
                    b.Navigation("Expense");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Reports.BankingReconciliation", b =>
                {
                    b.Navigation("Banks");

                    b.Navigation("FinancialAssets");

                    b.Navigation("Transfers");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Reports.LUBReport", b =>
                {
                    b.Navigation("Sales");

                    b.Navigation("Tanks");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Reports.PettyCash", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("OptimaDesk.Domain.RetailStations.RetailStation", b =>
                {
                    b.Navigation("Lubricants");

                    b.Navigation("Pumps");

                    b.Navigation("Tanks");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Sales.PumpSales", b =>
                {
                    b.Navigation("AGOPumps");

                    b.Navigation("PMSPumps");
                });

            modelBuilder.Entity("OptimaDesk.Domain.Stock.StockPosition", b =>
                {
                    b.Navigation("AGOTanks");

                    b.Navigation("LUBTanks");

                    b.Navigation("PMSTanks");
                });
#pragma warning restore 612, 618
        }
    }
}
